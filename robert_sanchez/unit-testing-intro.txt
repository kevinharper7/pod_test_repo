Unit Testing:

"Testing your functions in a systematic way"
"Diagramming out that we get expected output for different inputs"

Why unit tests?
-Plan ahead
=What should our functions do?
-What kind of input should they get?
-What kind of output should they give?
-What kinds of unusual input should we be ready for (edge cases)?


Reducing bugs!
-If our code passess tests -- we know the function does that was intended

-If the code fails a tests
    - we had input in mind differently
    -we made a mistake in the syntax
    -we recently changed the function but forgot to update our goals
    -locating EXACTLY what the bug is on a small scale

    Tests serve as  DOCUMENTATION:
        -they tell the story about what we've decide our code would be 